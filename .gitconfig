[user]
    name = Michael Kirby
    email = michael.kirby@vastdata.com

[diff]
    tool = meld

[merge]
    tool = meld

[core]
    editor = vim

[alias]
    cam = commit --amend
    co = checkout
    cob = checkout -b
    br = branch
    st = status
    #cp = cherry-pick
    lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    listbranches = for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:red)%(objectname:short)%(color:reset) - %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) - %(color:bold blue)<%(authorname)>%(color:reset) (%(color:green)%(committerdate:relative)%(color:reset))'
    reflogbranch = log -g --abbrev-commit --pretty=oneline
    rl = reflog --pretty=reflog

    probuild = !git push -u origin +HEAD:BUILD/$USER/$(git-symbolic-ref HEAD | sed 's/^refs\\/heads\\///')
    prodr = !git push -u origin +HEAD:DR/$USER/$(git-symbolic-ref HEAD | sed 's/^refs\\/heads\\///')
    procontrol = !git push -u origin +HEAD:CONTROL/$USER/$(git-symbolic-ref HEAD | sed 's/^refs\\/heads\\///')
    prodata = !git push -u origin +HEAD:DATA/$USER/$(git-symbolic-ref HEAD | sed 's/^refs\\/heads\\///')
    prosnap = !git push -u origin +HEAD:SNAP/$USER/$(git-symbolic-ref HEAD | sed 's/^refs\\/heads\\///')
    prounit = !git push -u origin +HEAD:UNITTEST/$USER/$(git-symbolic-ref HEAD | sed 's/^refs\\/heads\\///')
    proupgrade = !git push -u origin +HEAD:UPGRADE/$USER/$(git-symbolic-ref HEAD | sed 's/^refs\\/heads\\///')
    proregsnap = !git push -u origin +HEAD:REG/SNAP/$USER/$(git-symbolic-ref HEAD | sed 's/^refs\\/heads\\///')
    proregraid = !git push -u origin +HEAD:REG/RAID/$USER/$(git-symbolic-ref HEAD | sed 's/^refs\\/heads\\///')
    proregdr = !git push -u origin +HEAD:REG/DR/$USER/$(git-symbolic-ref HEAD | sed 's/^refs\\/heads\\///')
    proregestore = !git push -u origin +HEAD:REG/ESTORE/$USER/$(git-symbolic-ref HEAD | sed 's/^refs\\/heads\\///')
    promr = !git push -u origin +HEAD:MR/$USER/$(git-symbolic-ref HEAD | sed 's/^refs\\/heads\\///')
    promgmt = !git push -u origin +HEAD:MGMT/$USER/$(git-symbolic-ref HEAD | sed 's/^refs\\/heads\\///')

    pipe = "!f() { : git log ; echo `scripts/pipe2hash.sh $1`; }; f"
    pipelg = "!f() { : git log ; git lg `scripts/pipe2hash.sh $1`; }; f"

    cr = "!f() { git fetch; git difftool -d origin/${1}~${2:-1}..origin/${1}; }; f"
    base = "!f() { : git branch ; git branch -q -D base ; git branch base `git rev-list --min-parents=2 --max-count=1 HEAD`; }; f"

[help]
    autocorrect = 1

[branch]
    # Make git pull rebase instead of merge from tracking branch
    autosetuprebase = always

[color]
    ui = auto

[push]
    default = tracking

[difftool]
    prompt = false

[mergetool]
    keepbackup = false

[pretty]
    reflog = %C(auto)%h %<|(20)%gd %C(blue)%cr%C(reset) %gs (%s)
